{"version":3,"sources":["./src/app/components/edit-student/edit-student.component.ts","./src/app/components/edit-student/edit-student.component.html","./src/app/components/student-details/student-details.component.html","./src/app/components/student-details/student-details.component.ts","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/not-found/not-found.component.ts","./src/app/components/not-found/not-found.component.html","./src/app/components/add-student/add-student.component.ts","./src/app/components/add-student/add-student.component.html","./src/app/components/delete-student/delete-student.component.ts","./src/app/components/delete-student/delete-student.component.html","./src/app/components/students/students.component.ts","./src/app/components/students/students.component.html","./src/app/components/filter-students/filter-students.component.ts","./src/app/components/filter-students/filter-students.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/students.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Student } from 'src/app/models/student';\nimport { StudentsService } from 'src/app/services/students.service';\n\n@Component({\n  selector: 'app-edit-student',\n  templateUrl: './edit-student.component.html',\n  styleUrls: ['./edit-student.component.css'],\n})\nexport class EditStudentComponent implements OnInit {\n  @Input() student: Student = { id: '', name: '', email: '' };\n  @Output() updateStudent: EventEmitter<boolean> = new EventEmitter();\n  validAge: boolean = true;\n  subscriber: any;\n  prevStudent: Student = { id: '', name: '', email: '' };\n\n  constructor(private studentsService: StudentsService) {}\n\n  ngOnInit(): void {\n    this.prevStudent = this.student;\n  }\n\n  editStudent(myForm: any) {\n   \n    console.log(\"s\", this.student);\n    console.log(\"p\", this.prevStudent);\n    if (myForm.valid) {\n      this.subscriber = this.studentsService\n        .editStudent(this.student)\n        .subscribe({\n          next: (student) => {\n            this.subscriber.unsubscribe();\n            this.updateStudent.emit(true);\n          },\n          error: (err) => {\n            console.log(err);\n          },\n        });\n    }\n  }\n}\n","<button\n  class=\"btn btn-info me-3\"\n  data-bs-toggle=\"modal\"\n  [attr.data-bs-target]=\"'#editstudent'+student.id\"\n>\n  Edit\n</button>\n<div\n  class=\"modal fade\"\n  id=\"editstudent{{student.id}}\" \n  tabindex=\"-1\"\n  aria-labelledby=\"editStudentModal\"\n  aria-hidden=\"true\"\n>\n  <div class=\"modal-dialog modal-dialog-centered\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"editStudentModal\">Edit Student</h5>\n        <button\n          type=\"button\"\n          class=\"btn-close\"\n          data-bs-dismiss=\"modal\"\n          aria-label=\"Close\"\n        ></button>\n      </div>\n      <div class=\"modal-body\">\n        <form #myForm=\"ngForm\">\n          <!-- student name input -->\n          <div class=\"row mb-3\">\n            <label for=\"title\" class=\"col-sm-3 col-form-label\"\n              >Student Name</label\n            >\n            <div class=\"col-sm-9\">\n              <input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                placeholder=\"student name...\"\n                class=\"form-control\"\n                minlength=\"4\"\n                required\n                [(ngModel)]=\"student.name\"\n              />\n            </div>\n          </div>\n          <!-- student name validation -->\n          <div class=\"row justify-content-center\">\n            <div class=\"col-md-3\"></div>\n            <div class=\"col-md-9\">\n              <p\n                *ngIf=\"myForm.controls.name.invalid\"\n                class=\"alert alert-danger p-1\"\n              >\n                Enter a valid student name.\n              </p>\n            </div>\n          </div>\n          <!-- student email input -->\n          <div class=\"row mb-3\">\n            <label for=\"title\" class=\"col-sm-3 col-form-label\"\n              >Student Email</label\n            >\n            <div class=\"col-sm-9\">\n              <input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"student email...\"\n                class=\"form-control\"\n                minlength=\"4\"\n                pattern=\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\"\n                required\n                [(ngModel)]=\"student.email\"\n              />\n            </div>\n          </div>\n          <!-- student name validation -->\n          <div class=\"row justify-content-center\">\n            <div class=\"col-md-3\"></div>\n            <div class=\"col-md-9\">\n              <p\n                *ngIf=\"myForm.controls.email.invalid\"\n                class=\"alert alert-danger p-1\"\n              >\n                Enter a valid email.\n              </p>\n            </div>\n          </div>\n          \n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          (click)=\"editStudent(myForm)\"\n          [disabled]=\"myForm.invalid\"\n          data-bs-dismiss=\"modal\"\n        >\n          Update\n        </button>\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n          Close\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","<button\n  class=\"btn btn-info me-3\"\n  data-bs-toggle=\"modal\"\n  [attr.data-bs-target]=\"'#viewstudent'+student.id\"\n>\n view\n</button>\n<div\n  class=\"modal fade\"\n  id=\"viewstudent{{student.id}}\" \n  tabindex=\"-1\"\n  aria-labelledby=\"viewStudentModal\"\n  aria-hidden=\"true\"\n>\n  <div class=\"modal-dialog modal-dialog-centered\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"viewStudentModal\">View Student</h5>\n        <button\n          type=\"button\"\n          class=\"btn-close\"\n          data-bs-dismiss=\"modal\"\n          aria-label=\"Close\"\n        ></button>\n      </div>\n      <div class=\"modal-body\">\n <div class=\"card\" *ngIf=\"student; else noStudent\">\n      <div class=\"card-header text-center dark\">\n        <h3>{{ student.name }} </h3>\n      </div>\n      <div class=\"card-body\">\n        <p class=\"card-text\">  Email: {{ student.email }} </p>\n      </div>\n\n    </div>\n    <ng-template #noStudent>\n      <p class=\"alert alert-info\">No student found.</p>\n    </ng-template>\n\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n          Close\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { StudentsService } from 'src/app/services/students.service';\n\n@Component({\n  selector: 'app-student-details',\n  templateUrl: './student-details.component.html',\n  styleUrls: ['./student-details.component.css'],\n})\nexport class StudentDetailsComponent implements OnInit {\n  @Input() student: any;\n  subscriber: any;\n  @Input() students:any;\n\n  constructor(\n    private myActivatedRoute: ActivatedRoute,\n    private studentsService: StudentsService\n  ) {\n  }\n\n  ngOnInit(): void {\n    // this.getStudent();\n  }\n\n  // getStudent() {\n  //   this.subscriber = this.studentsService\n  //     .getStudentById(this.studentId)\n  //     .subscribe({\n  //       next: (student) => {\n  //         this.student = student;\n  //       },\n  //       error: (err) => {\n  //         console.log(err);\n  //       },\n  //     });\n  // }\n\n  ngOnDestroy(): void {\n    // this.subscriber.unsubscribe();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row justify-content-center\">\n  <div class=\"col-md-6\">\n    <img src=\"/assets/404_notfound.png\" alt=\"\" class=\"img-fluid\" />\n  </div>\n</div>\n<div class=\"row justify-content-center mt-5\">\n  <div class=\"col-md-6\">\n    <p class=\"text-center gray-color\">\n      Page not found. <a routerLink=\"/students\">Back to homepage.</a>\n    </p>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Student } from 'src/app/models/student';\nimport { StudentsService } from 'src/app/services/students.service';\n\n@Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.css'],\n})\nexport class AddStudentComponent implements OnInit {\n  newStudent: Student = { id: '', name: '', email: '' };\n  addSubscriber: any;\n  @Input() students: Student[] = [];\n\n  @Output() addedStudent: EventEmitter<boolean> = new EventEmitter();\n\n  constructor(\n    private studentsService: StudentsService\n  ) {}\n\n  ngOnInit(): void {}\n\n  addStudent(myForm: any) {\n    if (myForm.valid) {\n      this.addSubscriber = this.studentsService\n        .addStudent(this.newStudent)\n        .subscribe((response:any) => {\n          this.newStudent['id'] = response.id;\n          this.students.splice(0, 0, this.newStudent);\n          this.newStudent = { id: '', name: '', email: '' };\n        });\n    }\n  }\n}\n","\n    <button\n      type=\"button\"\n      data-bs-toggle=\"modal\"\n      data-bs-target=\"#addStudentModal\"\n      class=\"btn btn-primary\"\n    >\n      Add\n    </button>\n<div\n  class=\"modal fade\"\n  id=\"addStudentModal\"\n  tabindex=\"-1\"\n  aria-labelledby=\"addStudentModal\"\n  aria-hidden=\"true\"\n>\n  <div class=\"modal-dialog modal-dialog-centered\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"studentModalLabel\">Add Student</h5>\n        <button\n          type=\"button\"\n          class=\"btn-close\"\n          data-bs-dismiss=\"modal\"\n          aria-label=\"Close\"\n        ></button>\n      </div>\n      <div class=\"modal-body\">\n        <form #myForm=\"ngForm\">\n          <!-- student name input -->\n          <div class=\"row mb-3\">\n            <label for=\"title\" class=\"col-sm-3 col-form-label\"\n              >Student Name</label\n            >\n            <div class=\"col-sm-9\">\n              <input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                placeholder=\"student name...\"\n                class=\"form-control\"\n                minlength=\"4\"\n                pattern=\"[a-zA-Z ]*\"\n                required\n                [(ngModel)]=\"newStudent.name\"\n              />\n            </div>\n          </div>\n          <!-- student name validation -->\n          <div class=\"row justify-content-center\">\n            <div class=\"col-md-3\"></div>\n            <div class=\"col-md-9\">\n              <p\n                *ngIf=\"myForm.controls.name.invalid\"\n                class=\"alert alert-danger p-1\"\n              >\n                Enter a valid student name.\n              </p>\n            </div>\n          </div>\n          <!-- student email input -->\n          <div class=\"row mb-3\">\n            <label for=\"title\" class=\"col-sm-3 col-form-label\"\n              >Student Email</label\n            >\n            <div class=\"col-sm-9\">\n              <input\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                placeholder=\"student email...\"\n                class=\"form-control\"\n                minlength=\"4\"\n                pattern=\"^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$\"\n                required\n                [(ngModel)]=\"newStudent.email\"\n              />\n            </div>\n          </div>\n          <!-- student name validation -->\n          <div class=\"row justify-content-center\">\n            <div class=\"col-md-3\"></div>\n            <div class=\"col-md-9\">\n              <p\n                *ngIf=\"myForm.controls.email.invalid\"\n                class=\"alert alert-danger p-1\"\n              >\n                Enter a valid email.\n              </p>\n            </div>\n          </div>\n        </form>\n      </div>\n      <div class=\"modal-footer\">\n        <button\n          type=\"button\"\n          class=\"btn btn-primary\"\n          (click)=\"addStudent(myForm)\"\n          [disabled]=\"myForm.invalid\"\n          data-bs-dismiss=\"modal\"\n        >\n          Add\n        </button>\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n          Close\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Student } from 'src/app/models/student';\nimport { StudentsService } from 'src/app/services/students.service';\n\n@Component({\n  selector: 'app-delete-student',\n  templateUrl: './delete-student.component.html',\n  styleUrls: ['./delete-student.component.css'],\n})\nexport class DeleteStudentComponent implements OnInit {\n  @Input() student:any;\n  subscriber: any;\n  @Input() students: Student[] = [];\n\n  constructor(\n    private studentsService: StudentsService\n  ) {  \n}\n\n  ngOnInit(): void {\n  }\n\n  deleteStudent(studentId:string) {\n    this.subscriber = this.studentsService\n      .deleteStudent(studentId)\n      .subscribe({\n        next: () => {\n          let index = this.students.indexOf(this.student);  \n          this.students.splice(index, 1);  \n        },\n        error: (err) => {\n          console.log(err);\n        },\n      });\n  }\n\n}\n","<button\n  type=\"button\"\n  class=\"btn btn-info\"\n  data-bs-toggle=\"modal\"\n  [attr.data-bs-target]=\"'#student'+student.id\"\n>\n  Delete\n</button>\n<div\n  class=\"modal fade\"\n  id=\"student{{student.id}}\" \n  tabindex=\"-1\"\n  aria-labelledby=\"deleteStudentModal\"\n  aria-hidden=\"true\"\n>\n  <div class=\"modal-dialog modal-dialog-centered\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button\n          type=\"button\"\n          class=\"btn-close\"\n          data-bs-dismiss=\"modal\"\n          aria-label=\"Close\"\n        ></button>\n      </div>\n      <div class=\"modal-body\">\n        <div class=\"row justify-content-center\">\n          <div class=\"col-md-3\">\n            <img src=\"/assets/close-modal.png\" alt=\"\" class=\"img-fluid\" />\n          </div>\n        </div>\n        <h3 class=\"modal-title\">Are you sure?</h3>\n        <p>Are you sure you want to delete {{ student.name }}'s data?</p>\n      </div>\n      <div class=\"modal-footer justify-content-center\">\n        <button\n          type=\"button\"\n          class=\"btn btn-danger\"\n          (click)=\"deleteStudent(student.id)\"\n          data-bs-dismiss=\"modal\"\n        >\n          Delete\n        </button>\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\n          Close\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport * as _ from 'lodash';\nimport { Student } from 'src/app/models/student';\nimport { StudentsService } from 'src/app/services/students.service';\n\n@Component({\n  selector: 'app-students',\n  templateUrl: './students.component.html',\n  styleUrls: ['./students.component.css'],\n})\nexport class StudentsComponent implements OnInit {\n  subscriber: any;\n  students: Student[] = [];\n  filteredStudents: Student[] = [];\n  filter: boolean = false;\n  studentId: any;\n  student:any = { };\n\n\n  constructor(\n    private studentsService: StudentsService,\n    private router: Router,\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.getStudents();\n  }\n\n  ngOnDestroy(): void {\n    this.subscriber.unsubscribe();\n  }\n\n  getStudents() {\n    this.subscriber = this.studentsService.getStudents().subscribe({\n      next: (response) => {\n        this.students = response.body as Student[];\n      },\n      error: (err) => {\n        console.log(err);\n      },\n    });\n  }\nupdateStudent(updateStudent: boolean) {\n    // this.getStudent();\n  }\n\n  getStudentDetails(studentId: string) {\n    this.router.navigate(['students/' + studentId]);\n  }\n\n  // recieveNewStudent(newStudent: boolean) {\n  //   this.getStudents();\n  // }\n\n  filterStudents(filteredStudents: Student[]) {\n    this.filteredStudents = _.cloneDeep(filteredStudents);\n    this.filter = true;\n  }\n}\n","<div class=\"row justify-content-center mt-5\">\n  <div class=\"col-md-2\">\n    <app-add-student\n      [students] =\"students\"\n    ></app-add-student>\n  </div>\n  <div class=\"col-md-4\">\n    <app-filter-students\n      [students]=\"students\"\n      (returnedFilteredStudents)=\"filterStudents($event)\"\n    ></app-filter-students>\n  </div>\n</div>\n\n<div class=\"row justify-content-center mt-5\">\n  <div class=\"col-md-6\">\n    <table\n      class=\"table\"\n      *ngIf=\"filteredStudents.length > 0 && filter; else noFilteredStudents\"\n    >\n      <thead>\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Email</th>\n          <th scope=\"col\">Details</th>\n          <th scope=\"col\"> delete </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let student of filteredStudents; let i = index\">\n          <th scope=\"row\">{{ i + 1 }}</th>\n          <td>{{ student.name }}</td>\n          <td>{{ student.email }}</td>\n          <td>\n            <app-student-details [student]=\"student\" [students] =\"students\"></app-student-details>\n          </td>\n          <td>\n            <app-delete-student [student]=\"student\" [students] =\"students\"></app-delete-student>\n          </td>\n          <td>\n            <app-edit-student\n          [student]=\"student\"\n          (updateStudent)=\"updateStudent($event)\"\n        ></app-edit-student>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <table\n      class=\"table\"\n      *ngIf=\"students.length > 0 && !filter; else noStudents\"\n    >\n      <thead>\n        <tr>\n          <th scope=\"col\">#</th>\n          <th scope=\"col\">Name</th>\n          <th scope=\"col\">Email</th>\n          <th scope=\"col\">Details</th>\n          <th scope=\"col\"> Delete </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let student of students; let i = index\">\n          <th scope=\"row\">{{ i + 1 }}</th>\n          <td>{{ student.name }}</td>\n          <td>{{ student.email }}</td>\n          <td>\n            <app-student-details [student]=\"student\" [students] =\"students\"></app-student-details>\n          </td>\n          <td>\n            <app-delete-student [student]=\"student\" [students] =\"students\"></app-delete-student>\n          </td>\n          <td>\n            <app-edit-student\n          [student]=\"student\"\n          (updateStudent)=\"updateStudent($event)\"\n        ></app-edit-student>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n    <ng-template #noStudents>\n      <p *ngIf=\"!filter\" class=\"alert alert-info\">No Students</p>\n    </ng-template>\n    <ng-template #noFilteredStudents>\n      <p *ngIf=\"filter\" class=\"alert alert-info\">No Results</p>\n    </ng-template>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Student } from 'src/app/models/student';\n\n@Component({\n  selector: 'app-filter-students',\n  templateUrl: './filter-students.component.html',\n  styleUrls: ['./filter-students.component.css'],\n})\nexport class FilterStudentsComponent implements OnInit {\n  filterWith: string = '';\n  @Input() students: Student[] = [];\n  @Output()\n  returnedFilteredStudents: EventEmitter<Student[]> = new EventEmitter();\n  filteredStudents: Student[] = [];\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  filterStudents(searchValue: string) {\n    this.filteredStudents = this.students.filter((student) => {\n      return student.name.toLowerCase().indexOf(searchValue.toLowerCase()) > -1;\n    });\n\n    this.returnedFilteredStudents.emit(this.filteredStudents);\n  }\n}\n","\n    <input\n      type=\"text\"\n      placeholder=\"Search by name...\"\n      class=\"form-control\"\n      [ngModel]=\"filterWith\"\n      (ngModelChange)=\"filterStudents($event)\"\n    />\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {}\n","<nav class=\"navbar navbar-expand-lg navbar-light\">\n  <div class=\"container-fluid justify-content-center\">\n    <a\n      class=\"navbar-brand\"\n      [routerLinkActiveOptions]=\"{ exact: true }\"\n      routerLinkActive=\"custom-underline\"\n      routerLink=\"/students\"\n      >Students List </a\n    >\n  </div>\n</nav>\n\n<div class=\"container\">\n  <router-outlet></router-outlet>\n</div>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AddStudentComponent } from './components/add-student/add-student.component';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { StudentDetailsComponent } from './components/student-details/student-details.component';\nimport { StudentsComponent } from './components/students/students.component';\nimport { StudentsService } from './services/students.service';\nimport { EditStudentComponent } from './components/edit-student/edit-student.component';\nimport { DeleteStudentComponent } from './components/delete-student/delete-student.component';\nimport { FilterStudentsComponent } from './components/filter-students/filter-students.component';\nimport { HomeComponent } from './components/home/home.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StudentsComponent,\n    StudentDetailsComponent,\n    NotFoundComponent,\n    AddStudentComponent,\n    EditStudentComponent,\n    DeleteStudentComponent,\n    FilterStudentsComponent,\n    HomeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [StudentsService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Student } from '../models/student';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StudentsService {\n  readonly baseURL: string =\n    'https://jsonplaceholder.typicode.com/users';\n\n  constructor(private client: HttpClient) {}\n\n  getStudents() {\n    let response = this.client.get(this.baseURL, { observe: 'response' });\n\n    return response;\n  }\n\n  getStudentById(studentId: string) {\n    return this.client.get(`${this.baseURL}/${studentId}`);\n  }\n\n  addStudent(newStudent: Student) {\n    let response = this.client.post(this.baseURL, JSON.stringify({\n      name: newStudent.name,\n      email: newStudent.email,\n      id:newStudent.id\n    }));\n    console.log(response);\n    return response;\n  }\n\n  editStudent(student: Student) {\n    return this.client.patch(`${this.baseURL}/${student.id}`, student);\n  }\n\n  deleteStudent(studentId: string) {\n    return this.client.delete(`${this.baseURL}/${studentId}`);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NotFoundComponent } from './components/not-found/not-found.component';\nimport { StudentDetailsComponent } from './components/student-details/student-details.component';\nimport { StudentsComponent } from './components/students/students.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'students', pathMatch: 'full' },\n  { path: 'students', component: StudentsComponent },\n  { path: 'students/:id', component: StudentDetailsComponent },\n  { path: '**', component: NotFoundComponent },\n];\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}